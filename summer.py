from pyrogram import Client, types
from .. import loader, utils
from datetime import datetime

@loader.module(name="summer", author="HotDrify")
class SummerMod(loader.Module):
    """—á–µ—Ä–µ–∑ —Å–∫–æ–ª—å–∫–æ –ª–µ—Ç–æ?"""
    async def sum_cmd(self, app: Client, message: types.Message):
        """—Ç–∞–π–º–µ—Ä –ª–µ—Ç–∞"""
        await utils.answer(
            message, "<b>‚åõ —Å—á–∏—Ç–∞–µ–º...</b>")
        now = datetime.now()
        summer = datetime(now.year, 6, 1)
        if now.month > 6 or (now.month == 6 and now.day > 1):
            summer = datetime(now.year + 1, 6, 1)
        stime = abs(summer - now)
        await utils.answer(
            message, f"ü§î –¥–æ –ª–µ—Ç–∞ <b>–æ—Å—Ç–∞–ª–æ—Å—å</b>\n–î–Ω–µ–π: <code>{stime.days}</code>\n–ß–∞—Å–æ–≤: <code>{stime.seconds // 3600}</code>\n–ú–∏–Ω—É—Ç: <code>{stime.seconds // 60 % 60}</code>\n–°–µ–∫—É–Ω–¥: <code>{stime.seconds % 60}</code>\n")